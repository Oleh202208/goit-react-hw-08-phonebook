{"version":3,"file":"static/js/769.93737efb.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.js","hooks/useContacts.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","hooks/useFilter.js","pages/PhoneBook/PhoneBook.styled.jsx","pages/PhoneBook/PhoneBook.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 20px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n`;\n\nexport const LabelForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n  width: 200px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 95px;\n  margin: 0;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #4caf50;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport PropTypes from 'prop-types';\nimport { selectAllContacts } from 'redux/selectors';\nimport { Button, Form, LabelForm, Wrapper } from './ContactForm.styled';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleChange = e => {\n    const nameInput = e.currentTarget.name;\n    const valueInput = e.currentTarget.value;\n\n    switch (nameInput) {\n      case 'name':\n        setName(valueInput);\n        break;\n      case 'number':\n        setNumber(valueInput);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = contacts.find(\n      ({ name }) =>\n        name.toLocaleLowerCase() ===\n        e.currentTarget.name.value.toLocaleLowerCase()\n    );\n\n    if (newContact) {\n      return alert(`${e.currentTarget.name.value} is already in contacs.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Wrapper>\n        <LabelForm>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <Button type=\"submit\">Add contacts</Button>\n      </Wrapper>\n    </Form>\n  );\n};\n\nContactsForm.protoTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  & :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  & :hover {\n    background-color: #4caf50;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonDelete, Item } from './ContactItem.styled';\n\nexport const ContactItem = ({ name, number, id, onDeleteContact }) => {\n  return (\n    <Item>\n      <span>\n        {name}: {number}\n      </span>\n      <ButtonDelete type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </ButtonDelete>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.li`\n  list-style: none;\n  padding: 0;\n  margin: 20px 0 0 0;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useContacts } from 'hooks/useContacts';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, number, id }) => (\n        <ContactItem\n          id={id}\n          key={id}\n          name={name}\n          number={number}\n          onDeleteContact={() => dispatch(deleteContact(id))}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport const useContacts = () => useSelector(selectFilteredContacts);\n","import styled from 'styled-components';\n\nexport const LabelFiltr = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n  width: 200px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { useFilter } from 'hooks/useFilter';\nimport { LabelFiltr } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const inputValue = useFilter();\n\n  const handleFilter = e => dispatch(filterContacts(e.currentTarget.value));\n\n  return (\n    <LabelFiltr>\n      Find contacts by name\n      <input type=\"text\" value={inputValue} onChange={handleFilter}></input>\n    </LabelFiltr>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\n\nexport const useFilter = () => useSelector(selectFilter);\n","import styled from 'styled-components';\n\nexport const TitleBook = styled.h2`\n  text-align: center;\n  font-size: 26px;\n  margin-bottom: 20px;\n`;\n\nexport const ContainerBook = styled.div`\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f8f8f8;\n`;\n\nexport const ContactListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 4px;\n`;\n","import { ContactsForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsContactsEmpty } from 'redux/selectors';\nimport {\n  ContactListContainer,\n  ContainerBook,\n  TitleBook,\n} from './PhoneBook.styled';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n  const isContactsEmpty = useSelector(selectIsContactsEmpty);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContainerBook>\n      <TitleBook>Phone book</TitleBook>\n      <ContactsForm />\n      <TitleBook>Contacts</TitleBook>\n      <ContactListContainer>\n        <Filter />\n        {isContactsEmpty ? (\n          <h2>Contactbook is empty, please add your first contact!</h2>\n        ) : (\n          <ContactList />\n        )}\n      </ContactListContainer>\n    </ContainerBook>\n  );\n};\n\nexport default PhoneBook;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Form","styled","Wrapper","LabelForm","Button","ContactsForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectAllContacts","handleChange","e","nameInput","currentTarget","valueInput","value","reset","onSubmit","preventDefault","find","toLocaleLowerCase","alert","addContact","type","pattern","title","required","onChange","protoTypes","PropTypes","Item","ButtonDelete","ContactItem","id","onDeleteContact","onClick","List","ContactList","filteredContacts","selectFilteredContacts","useEffect","fetchContacts","map","deleteContact","LabelFiltr","Filter","inputValue","selectFilter","filterContacts","TitleBook","ContainerBook","ContactListContainer","isContactsEmpty","selectIsContactsEmpty","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}